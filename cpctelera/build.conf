###########################################################################
##                          CPCTELERA ENGINE                             ##
##                      Build configuration file                         ##
##-----------------------------------------------------------------------##
## This file is intendend for you to be able to config the way in which  ##
## you would like to build Cpctelera, the compiler executables and path. ##
## The most important thing you can do is selecting the actual files and ##
## modules you want to be built, thus leaving out anything you are not   ##
## going to use. This lets you save space as enables you to have only    ## 
## the code that will be actually executed.                              ##
##-----------------------------------------------------------------------##
## Author:  ronaldo / @FranGallegoBR                                     ##
## (C) 2014 Fremos / Cheesetea / ByteRealms                              ##
###########################################################################

####
## SECTION 1: COMPILER CONFIGURATION
##
## Under this section you find the macros that set up the compiler executables
## that will be used for code compilation. Under Linux systems you would normally
## have your compiler installed in a directory that is added to the path (like
## /usr/bin, for instance). If this is not the case, or you are running under
## Windows, or Cygwin, try to put the executables with full path.
##
## Z80ASM      >> Assembler source compiler. Used to compile .s files written in Z80 Assembler.
## Z80ASMFLAGS >> Flags to be used for compilation with SDASZ80
## Z80LNK      >> Z80 Linker, used to link togheter .rel files into a library module
#####

Z80PATH=/home/ronaldo/trabajo/repos/cpc-dev-tool-chain/tool/sdcc/sdcc-3.3.0.installtree/bin
Z80ASM=$(Z80PATH)/sdasz80
Z80ASMFLAGS=-l -o -s
Z80LNK=$(Z80PATH)/sdar

####
## SECTION 2: LIBRARY CONFIG
##
## This section establishes source and object subfolders and the binary objects to
## be built. Normally, you want to change the OBJ files you want to be built, selecting
## only the ones that contain the actual code that will be used by you in your application.
##
## SRCDIR   >> Directory under which assembly source files are located
## OBJDIR   >> Directory where generated intermediate object files will be written to
## OBJFILES >> intermediate .rel files that will be needed for your application (their names
##             have to correspond to existing source files in the SRCDIR, but with .rel extension)
#####

SRCDIR=src
OBJDIR=obj
OBJFILES=sprites.rel
